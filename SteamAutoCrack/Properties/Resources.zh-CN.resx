<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AccountName" xml:space="preserve">
    <value>账户名称:</value>
  </data>
  <data name="AppIDFinder" xml:space="preserve">
    <value>AppID查找器</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>应用名称:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CannotGetAppNameFromInputPath" xml:space="preserve">
    <value>无法从输入路径获取应用程序名称。</value>
  </data>
  <data name="CheckingAllGoldbergEmulatorFileExistsOrNot" xml:space="preserve">
    <value>正在检查所有 Goldberg 模拟器文件是否存在...</value>
  </data>
  <data name="ClearLog" xml:space="preserve">
    <value>清除日志</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="CreateCrackReadmeFile" xml:space="preserve">
    <value>创建破解说明文件</value>
  </data>
  <data name="CurrentGoldbergSteamEmulatorJobid" xml:space="preserve">
    <value>当前 Goldberg 模拟器 jobid : </value>
  </data>
  <data name="DisableNetworking" xml:space="preserve">
    <value>禁用网络</value>
  </data>
  <data name="DisableOverlay" xml:space="preserve">
    <value>禁用游戏内覆盖</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下载</value>
  </data>
  <data name="EmptyAppIDPleaseSelectOneUsingAppIDFinder" xml:space="preserve">
    <value>空 AppID，请使用 AppID 查找器选择。</value>
  </data>
  <data name="EnableDebugLog" xml:space="preserve">
    <value>启用调试日志</value>
  </data>
  <data name="ErrorWhenSelectingFile" xml:space="preserve">
    <value>选择文件时出错:</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>失败</value>
  </data>
  <data name="FailedToCheckGoldbergEmulator" xml:space="preserve">
    <value>检查 Goldberg 模拟器文件失败。</value>
  </data>
  <data name="FailedToLoadAppListPleaseRestartSteamAutoCrackToTryAgain" xml:space="preserve">
    <value>无法加载应用列表，请重新启动 SteamAutoCrack 以重试。</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>文件夹</value>
  </data>
  <data name="Force" xml:space="preserve">
    <value>强制</value>
  </data>
  <data name="ForceDownload" xml:space="preserve">
    <value>强制下载</value>
  </data>
  <data name="ForceGenerateForEachSteam__api64Dll" xml:space="preserve">
    <value>强制为每个 steam__api(64).dll 生成</value>
  </data>
  <data name="ForceUpdateSteamAppList" xml:space="preserve">
    <value>强制更新 Steam 应用列表</value>
  </data>
  <data name="FuzzySearch" xml:space="preserve">
    <value>模糊搜索</value>
  </data>
  <data name="GenerateAchievementImages" xml:space="preserve">
    <value>生成成就图片</value>
  </data>
  <data name="GenerateSteamInterfacesFile" xml:space="preserve">
    <value>生成 Steam 接口文件</value>
  </data>
  <data name="GeneratorAPI" xml:space="preserve">
    <value>生成器 API :</value>
  </data>
  <data name="GoldbergEmulatorFileIsMissingNDownloadGoldbergEmulator1" xml:space="preserve">
    <value>Goldberg 模拟器文件丢失。</value>
  </data>
  <data name="GoldbergEmulatorFileIsMissingNDownloadGoldbergEmulator2" xml:space="preserve">
    <value>下载 Goldberg 模拟器?</value>
  </data>
  <data name="KeepBindSection" xml:space="preserve">
    <value>保留 .bind 段</value>
  </data>
  <data name="KeepDOSStubData" xml:space="preserve">
    <value>保留 DOS 存根数据</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言:</value>
  </data>
  <data name="LanguageRestartToTakeEffect" xml:space="preserve">
    <value>语言 (需打开 “保存配置文件” ,重新启动以生效):</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>等级</value>
  </data>
  <data name="ListenPort" xml:space="preserve">
    <value>监听端口:</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>正在加载...</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>日志</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>消息</value>
  </data>
  <data name="OfflineMode" xml:space="preserve">
    <value>脱机模式</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="OpenConfigFolder" xml:space="preserve">
    <value>打开配置文件夹</value>
  </data>
  <data name="OpenExampleConfig" xml:space="preserve">
    <value>打开示例配置</value>
  </data>
  <data name="OrGetSteamAppIDOn" xml:space="preserve">
    <value>      或在此处获取 AppID:</value>
  </data>
  <data name="OutputLogToFile" xml:space="preserve">
    <value>输出日志到文件</value>
  </data>
  <data name="OutputPath" xml:space="preserve">
    <value>输出路径:</value>
  </data>
  <data name="PackFileWithZipArchive" xml:space="preserve">
    <value>用 Zip 压缩文件打包文件</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>路径: </value>
  </data>
  <data name="RealignSections" xml:space="preserve">
    <value>重新对齐段</value>
  </data>
  <data name="RecalculateFileChecksum" xml:space="preserve">
    <value>重新计算文件校验和</value>
  </data>
  <data name="RestoreToDefaultConfig" xml:space="preserve">
    <value>还原到默认配置</value>
  </data>
  <data name="SaveConfigFile" xml:space="preserve">
    <value>保存配置文件</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>正在搜索...</value>
  </data>
  <data name="SelectFolderOrFile" xml:space="preserve">
    <value>选择文件夹或文件?</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>来源</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="SteamAppID" xml:space="preserve">
    <value>Steam AppID:</value>
  </data>
  <data name="SteamGameAutomaticCracker" xml:space="preserve">
    <value>Steam游戏自动破解器</value>
  </data>
  <data name="SteamID" xml:space="preserve">
    <value>Steam ID:</value>
  </data>
  <data name="SteamWebAPIKey" xml:space="preserve">
    <value>Steam Web API 密钥:</value>
  </data>
  <data name="UpdateDownload" xml:space="preserve">
    <value>升级/下载</value>
  </data>
  <data name="UseCustomBroadcastIP" xml:space="preserve">
    <value>使用自定义广播 IP:</value>
  </data>
  <data name="UseCustomSaveLocation" xml:space="preserve">
    <value>使用自定义保存位置:</value>
  </data>
  <data name="UseExperimentalFeatures" xml:space="preserve">
    <value>使用实验性功能</value>
  </data>
  <data name="UseExperimentalVersionGoldbergEmulator" xml:space="preserve">
    <value>使用实验版 Goldberg 模拟器</value>
  </data>
  <data name="UseSteamWebAppList" xml:space="preserve">
    <value>使用 Steam Web 应用列表</value>
  </data>
  <data name="UseXan105API" xml:space="preserve">
    <value>使用 Xan105 API</value>
  </data>
  <data name="_1GenerateGoldbergSteamEmulatorGameInfo" xml:space="preserve">
    <value>1. 生成 Goldberg Steam 模拟器游戏信息</value>
  </data>
  <data name="_2GenerateGoldbergSteamEmulatorConfiguration" xml:space="preserve">
    <value>2. 生成 Goldberg Steam 模拟器配置</value>
  </data>
  <data name="_3UnpackSteamStub" xml:space="preserve">
    <value>3. 解包 SteamStub</value>
  </data>
  <data name="_4ApplyGoldbergSteamEmulator" xml:space="preserve">
    <value>4. 应用 Goldberg Steam 模拟器</value>
  </data>
  <data name="_5GenerateCrackOnlyFiles" xml:space="preserve">
    <value>5. 生成仅破解文件</value>
  </data>
  <data name="_6RestoreCrack" xml:space="preserve">
    <value>6.恢复破解</value>
  </data>
</root>